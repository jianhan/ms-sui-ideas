// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/idea/idea.proto

/*
Package ideas is a generated protocol buffer package.

It is generated from these files:
	proto/idea/idea.proto

It has these top-level messages:
	Ideas
	DeleteIdeasRequest
	DeleteIdeasResponse
	HideIdeasRequest
	Idea
*/
package ideas

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import go_micro_srv_ideas "github.com/jianhan/ms-sui-ideas/proto/rating"
import go_micro_srv_ideas1 "github.com/jianhan/ms-sui-ideas/proto/story"
import go_micro_srv_ideas2 "github.com/jianhan/ms-sui-ideas/proto/occupation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AppType defines application type
type AppType int32

const (
	AppType_WEB     AppType = 0
	AppType_MOBILE  AppType = 1
	AppType_DESKTOP AppType = 2
	AppType_OTHER   AppType = 3
)

var AppType_name = map[int32]string{
	0: "WEB",
	1: "MOBILE",
	2: "DESKTOP",
	3: "OTHER",
}
var AppType_value = map[string]int32{
	"WEB":     0,
	"MOBILE":  1,
	"DESKTOP": 2,
	"OTHER":   3,
}

func (x AppType) String() string {
	return proto.EnumName(AppType_name, int32(x))
}
func (AppType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Ideas struct {
	Ideas []*Idea `protobuf:"bytes,1,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *Ideas) Reset()                    { *m = Ideas{} }
func (m *Ideas) String() string            { return proto.CompactTextString(m) }
func (*Ideas) ProtoMessage()               {}
func (*Ideas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ideas) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type DeleteIdeasRequest struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *DeleteIdeasRequest) Reset()                    { *m = DeleteIdeasRequest{} }
func (m *DeleteIdeasRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteIdeasRequest) ProtoMessage()               {}
func (*DeleteIdeasRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeleteIdeasRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DeleteIdeasResponse struct {
}

func (m *DeleteIdeasResponse) Reset()                    { *m = DeleteIdeasResponse{} }
func (m *DeleteIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteIdeasResponse) ProtoMessage()               {}
func (*DeleteIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type HideIdeasRequest struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *HideIdeasRequest) Reset()                    { *m = HideIdeasRequest{} }
func (m *HideIdeasRequest) String() string            { return proto.CompactTextString(m) }
func (*HideIdeasRequest) ProtoMessage()               {}
func (*HideIdeasRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HideIdeasRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Idea struct {
	// @inject_tag: bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"`
	// @inject_tag: bson:"name" valid:"required~Name is required" conform:"trim"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" bson:"name" valid:"required~Name is required" conform:"trim"`
	// @inject_tag: bson:"slug" valid:"required~Slug is required" conform:"trim"
	Slug string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty" bson:"slug" valid:"required~Slug is required" conform:"trim"`
	// @inject_tag: bson:"description" valid:"Description is required" conform:"trim"
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty" bson:"description" valid:"Description is required" conform:"trim"`
	// @inject_tag: bson:"hidden"
	Hidden bool `protobuf:"varint,5,opt,name=hidden" json:"hidden,omitempty" bson:"hidden"`
	// @inject_tag: bson:"app_type" valid:"App type is required"
	Type []AppType `protobuf:"varint,6,rep,packed,name=type,enum=go.micro.srv.ideas.AppType" json:"type,omitempty" bson:"app_type" valid:"App type is required"`
	// @inject_tag: bson:"min_age"
	MinAge uint64 `protobuf:"varint,7,opt,name=min_age,json=minAge" json:"min_age,omitempty" bson:"min_age"`
	// @inject_tag: bson:"max_age"
	MaxAge uint64 `protobuf:"varint,8,opt,name=max_age,json=maxAge" json:"max_age,omitempty" bson:"max_age"`
	// @inject_tag: bson:"rating"
	Rating []*go_micro_srv_ideas.Rating `protobuf:"bytes,9,rep,name=rating" json:"rating,omitempty" bson:"rating"`
	// @inject_tag: bson:"stories"
	Stories []*go_micro_srv_ideas1.Story `protobuf:"bytes,10,rep,name=stories" json:"stories,omitempty" bson:"stories"`
	// @inject_tag: bson:"occupations"
	Occupations []*go_micro_srv_ideas2.Occupation `protobuf:"bytes,11,rep,name=occupations" json:"occupations,omitempty" bson:"occupations"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
}

func (m *Idea) Reset()                    { *m = Idea{} }
func (m *Idea) String() string            { return proto.CompactTextString(m) }
func (*Idea) ProtoMessage()               {}
func (*Idea) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Idea) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Idea) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Idea) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Idea) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Idea) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Idea) GetType() []AppType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Idea) GetMinAge() uint64 {
	if m != nil {
		return m.MinAge
	}
	return 0
}

func (m *Idea) GetMaxAge() uint64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *Idea) GetRating() []*go_micro_srv_ideas.Rating {
	if m != nil {
		return m.Rating
	}
	return nil
}

func (m *Idea) GetStories() []*go_micro_srv_ideas1.Story {
	if m != nil {
		return m.Stories
	}
	return nil
}

func (m *Idea) GetOccupations() []*go_micro_srv_ideas2.Occupation {
	if m != nil {
		return m.Occupations
	}
	return nil
}

func (m *Idea) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Idea) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Ideas)(nil), "go.micro.srv.ideas.ideas")
	proto.RegisterType((*DeleteIdeasRequest)(nil), "go.micro.srv.ideas.DeleteIdeasRequest")
	proto.RegisterType((*DeleteIdeasResponse)(nil), "go.micro.srv.ideas.DeleteIdeasResponse")
	proto.RegisterType((*HideIdeasRequest)(nil), "go.micro.srv.ideas.HideIdeasRequest")
	proto.RegisterType((*Idea)(nil), "go.micro.srv.ideas.Idea")
	proto.RegisterEnum("go.micro.srv.ideas.AppType", AppType_name, AppType_value)
}

func init() { proto.RegisterFile("proto/idea/idea.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0xeb, 0x38, 0x89, 0x9b, 0xf1, 0xfb, 0x56, 0xd1, 0xa0, 0xc2, 0x12, 0x24, 0xb0, 0xa2,
	0xaa, 0x44, 0x48, 0xb5, 0xa5, 0x54, 0xa2, 0xea, 0x8d, 0x44, 0x89, 0xd4, 0x08, 0x68, 0xd0, 0x36,
	0x08, 0x89, 0x4b, 0xd9, 0xc6, 0x8b, 0xbb, 0xa8, 0xfe, 0x83, 0x77, 0x0d, 0xed, 0xf7, 0xe3, 0x63,
	0x71, 0x40, 0x5e, 0x6f, 0x4a, 0xa0, 0x86, 0x56, 0xe2, 0xe2, 0x8c, 0x67, 0x9e, 0xdf, 0x64, 0x3d,
	0x3b, 0x0f, 0x6c, 0x67, 0x79, 0xaa, 0xd2, 0x40, 0x84, 0x9c, 0xe9, 0x87, 0xaf, 0xdf, 0x11, 0xa3,
	0xd4, 0x8f, 0xc5, 0x32, 0x4f, 0x7d, 0x99, 0x7f, 0xf1, 0xcb, 0x82, 0xec, 0x3d, 0x89, 0xd2, 0x34,
	0xba, 0xe0, 0x81, 0x56, 0x9c, 0x15, 0x1f, 0x03, 0x25, 0x62, 0x2e, 0x15, 0x8b, 0xb3, 0x0a, 0xea,
	0x1d, 0x46, 0x42, 0x9d, 0x17, 0x67, 0xfe, 0x32, 0x8d, 0x83, 0x4f, 0x82, 0x25, 0xe7, 0x2c, 0x09,
	0x62, 0xb9, 0x27, 0x0b, 0xb1, 0xa7, 0x3b, 0x54, 0x64, 0x90, 0x33, 0x25, 0x92, 0xc8, 0xfc, 0x18,
	0xf4, 0xe0, 0x6e, 0xa8, 0x54, 0x69, 0x7e, 0x55, 0x3d, 0x0d, 0x38, 0xba, 0x1b, 0x98, 0x2e, 0x97,
	0x45, 0xc6, 0x94, 0x48, 0x93, 0xb5, 0xb0, 0x6a, 0xd1, 0x3f, 0x80, 0x96, 0x96, 0xa2, 0x6f, 0x02,
	0x62, 0x79, 0xf6, 0xc0, 0x1d, 0x12, 0xff, 0xe6, 0x10, 0xfc, 0x59, 0xc8, 0x19, 0xad, 0x64, 0xfd,
	0x5d, 0xc0, 0x09, 0xbf, 0xe0, 0x8a, 0x97, 0x49, 0x49, 0xf9, 0xe7, 0x82, 0x4b, 0x85, 0x5d, 0xb0,
	0x45, 0x58, 0xf5, 0xe8, 0xd0, 0x32, 0xec, 0x6f, 0xc3, 0xbd, 0x5f, 0x74, 0x32, 0x4b, 0x13, 0xc9,
	0xfb, 0x3b, 0xd0, 0x3d, 0x12, 0xe1, 0x6d, 0xf0, 0x77, 0x1b, 0x9a, 0xa5, 0x04, 0xb7, 0xa0, 0x31,
	0x9b, 0x10, 0xcb, 0xb3, 0x06, 0x1d, 0xda, 0x98, 0x4d, 0x10, 0xa1, 0x99, 0xb0, 0x98, 0x93, 0x86,
	0xce, 0xe8, 0xb8, 0xcc, 0xc9, 0x8b, 0x22, 0x22, 0x76, 0x95, 0x2b, 0x63, 0xf4, 0xc0, 0x0d, 0xb9,
	0x5c, 0xe6, 0x22, 0x2b, 0xbf, 0x99, 0x34, 0x75, 0x69, 0x3d, 0x85, 0xf7, 0xa1, 0x7d, 0x2e, 0xc2,
	0x90, 0x27, 0xa4, 0xe5, 0x59, 0x83, 0x4d, 0x6a, 0xde, 0x30, 0x80, 0xa6, 0xba, 0xca, 0x38, 0x69,
	0x7b, 0xf6, 0x60, 0x6b, 0xf8, 0xa8, 0x6e, 0x1c, 0xa3, 0x2c, 0x5b, 0x5c, 0x65, 0x9c, 0x6a, 0x21,
	0x3e, 0x00, 0x27, 0x16, 0xc9, 0x29, 0x8b, 0x38, 0x71, 0x3c, 0x6b, 0xd0, 0xa4, 0xed, 0x58, 0x24,
	0xa3, 0xa8, 0x2a, 0xb0, 0x4b, 0x5d, 0xd8, 0x34, 0x05, 0x76, 0x59, 0x16, 0x86, 0xd0, 0xae, 0xf6,
	0x80, 0x74, 0xf4, 0xcc, 0x7b, 0x75, 0x7f, 0x42, 0xb5, 0x82, 0x1a, 0x25, 0xee, 0x83, 0x53, 0x6e,
	0x80, 0xe0, 0x92, 0x80, 0x86, 0x1e, 0xd6, 0x41, 0x27, 0xe5, 0x92, 0xd0, 0x95, 0x12, 0x5f, 0x80,
	0xfb, 0xf3, 0xe2, 0x25, 0x71, 0x35, 0xf8, 0xb8, 0x0e, 0x9c, 0x5f, 0xcb, 0xe8, 0x3a, 0x82, 0x87,
	0x00, 0xcb, 0x9c, 0x33, 0xc5, 0xc3, 0x53, 0xa6, 0xc8, 0x7f, 0x9e, 0x65, 0x8e, 0x5b, 0x7a, 0xc2,
	0x5f, 0x79, 0xc2, 0x5f, 0xac, 0x3c, 0x41, 0x3b, 0x46, 0x3d, 0x52, 0x25, 0x5a, 0x64, 0xe1, 0x0a,
	0xfd, 0xff, 0x76, 0xd4, 0xa8, 0x47, 0xea, 0xd9, 0x73, 0x70, 0xcc, 0x8c, 0xd1, 0x01, 0xfb, 0xdd,
	0x74, 0xdc, 0xdd, 0x40, 0x80, 0xf6, 0xeb, 0xf9, 0x78, 0xf6, 0x6a, 0xda, 0xb5, 0xd0, 0x05, 0x67,
	0x32, 0x3d, 0x79, 0xb9, 0x98, 0xbf, 0xe9, 0x36, 0xb0, 0x03, 0xad, 0xf9, 0xe2, 0x68, 0x4a, 0xbb,
	0xf6, 0xf0, 0x5b, 0x03, 0x5a, 0x7a, 0xb3, 0x70, 0x0c, 0x9b, 0xc7, 0xfc, 0x6b, 0x15, 0xd7, 0x4e,
	0xaa, 0x72, 0xf7, 0x9f, 0x4b, 0xfd, 0x0d, 0x9c, 0x82, 0xfb, 0x56, 0x1f, 0xe9, 0xdf, 0xda, 0x7c,
	0x00, 0x77, 0xcd, 0x08, 0xb8, 0x5b, 0xa7, 0xbd, 0xe9, 0xa8, 0xde, 0xd3, 0x5b, 0x75, 0xc6, 0x51,
	0x1b, 0x78, 0x0c, 0x9d, 0x6b, 0x4f, 0xe1, 0x4e, 0x1d, 0xf7, 0xbb, 0xe5, 0xfe, 0x7a, 0xe2, 0xb1,
	0xf3, 0xbe, 0xf2, 0xfa, 0x59, 0x5b, 0x5f, 0xd3, 0xfe, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8,
	0xa2, 0xbf, 0xf0, 0x30, 0x05, 0x00, 0x00,
}
