// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/idea/idea.proto

/*
Package idea is a generated protocol buffer package.

It is generated from these files:
	proto/idea/idea.proto

It has these top-level messages:
	Idea
	Story
	Rating
	IdeaFilter
	ListIdeasResponse
	ShowIdeasRequest
	ShowIdeasResponse
	UpsertIdeasRequest
	CreateIdeasResponse
	UpdateIdeasResponse
	HideIdeasResponse
	DeleteIdeasResponse
*/
package idea

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import go_micro_srv_ideas "github.com/jianhan/ms-sui-ideas/proto/occupation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AppType defines application type
type AppType int32

const (
	AppType_WEB     AppType = 0
	AppType_MOBILE  AppType = 1
	AppType_DESKTOP AppType = 2
	AppType_OTHER   AppType = 3
)

var AppType_name = map[int32]string{
	0: "WEB",
	1: "MOBILE",
	2: "DESKTOP",
	3: "OTHER",
}
var AppType_value = map[string]int32{
	"WEB":     0,
	"MOBILE":  1,
	"DESKTOP": 2,
	"OTHER":   3,
}

func (x AppType) String() string {
	return proto.EnumName(AppType_name, int32(x))
}
func (AppType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Pirority defines a set of pirorities
type Pirority int32

const (
	Pirority_UNSET        Pirority = 0
	Pirority_NICE_TO_HAVE Pirority = 1
	Pirority_SHOULD_HAVE  Pirority = 2
	Pirority_MUST_HAVE    Pirority = 3
)

var Pirority_name = map[int32]string{
	0: "UNSET",
	1: "NICE_TO_HAVE",
	2: "SHOULD_HAVE",
	3: "MUST_HAVE",
}
var Pirority_value = map[string]int32{
	"UNSET":        0,
	"NICE_TO_HAVE": 1,
	"SHOULD_HAVE":  2,
	"MUST_HAVE":    3,
}

func (x Pirority) String() string {
	return proto.EnumName(Pirority_name, int32(x))
}
func (Pirority) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Idea struct {
	// @inject_tag: bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"`
	// @inject_tag: bson:"name" valid:"required~Name is required" conform:"trim"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" bson:"name" valid:"required~Name is required" conform:"trim"`
	// @inject_tag: bson:"slug" valid:"required~Slug is required" conform:"trim"
	Slug string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty" bson:"slug" valid:"required~Slug is required" conform:"trim"`
	// @inject_tag: bson:"description" valid:"Description is required" conform:"trim"
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty" bson:"description" valid:"Description is required" conform:"trim"`
	// @inject_tag: bson:"hidden"
	Hidden bool `protobuf:"varint,5,opt,name=hidden" json:"hidden,omitempty" bson:"hidden"`
	// @inject_tag: bson:"app_type" valid:"App type is required"
	Type []AppType `protobuf:"varint,6,rep,packed,name=type,enum=go.micro.srv.ideas.AppType" json:"type,omitempty" bson:"app_type" valid:"App type is required"`
	// @inject_tag: bson:"min_age" valid:"range(8|99)~Invalid min age range"
	MinAge uint64 `protobuf:"varint,7,opt,name=min_age,json=minAge" json:"min_age,omitempty" bson:"min_age" valid:"range(8|99)~Invalid min age range"`
	// @inject_tag: bson:"max_age" valid:"range(8|99)~Invalid max age range"
	MaxAge uint64 `protobuf:"varint,8,opt,name=max_age,json=maxAge" json:"max_age,omitempty" bson:"max_age" valid:"range(8|99)~Invalid max age range"`
	// @inject_tag: bson:"rating"
	Rating []*Rating `protobuf:"bytes,9,rep,name=rating" json:"rating,omitempty" bson:"rating"`
	// @inject_tag: bson:"stories"
	Stories []*Story `protobuf:"bytes,10,rep,name=stories" json:"stories,omitempty" bson:"stories"`
	// @inject_tag: bson:"occupations"
	Occupations []*go_micro_srv_ideas.Occupation `protobuf:"bytes,11,rep,name=occupations" json:"occupations,omitempty" bson:"occupations"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
}

func (m *Idea) Reset()                    { *m = Idea{} }
func (m *Idea) String() string            { return proto.CompactTextString(m) }
func (*Idea) ProtoMessage()               {}
func (*Idea) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Idea) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Idea) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Idea) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Idea) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Idea) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Idea) GetType() []AppType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Idea) GetMinAge() uint64 {
	if m != nil {
		return m.MinAge
	}
	return 0
}

func (m *Idea) GetMaxAge() uint64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *Idea) GetRating() []*Rating {
	if m != nil {
		return m.Rating
	}
	return nil
}

func (m *Idea) GetStories() []*Story {
	if m != nil {
		return m.Stories
	}
	return nil
}

func (m *Idea) GetOccupations() []*go_micro_srv_ideas.Occupation {
	if m != nil {
		return m.Occupations
	}
	return nil
}

func (m *Idea) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Idea) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Story struct {
	// @inject_tag: bson:"title" valid:"required~Title is required" conform:"trim"
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty" bson:"title" valid:"required~Title is required" conform:"trim"`
	// @inject_tag: bson:"pirority" valid:"required~Pirority is required"
	Pirority Pirority `protobuf:"varint,2,opt,name=pirority,enum=go.micro.srv.ideas.Pirority" json:"pirority,omitempty" bson:"pirority" valid:"required~Pirority is required"`
	// @inject_tag: bson:"role" valid:"required~Who is required" conform:"trim"
	Who string `protobuf:"bytes,3,opt,name=who" json:"who,omitempty" bson:"role" valid:"required~Who is required" conform:"trim"`
	// @inject_tag: bson:"action" valid:"required~What is required" conform:"trim"
	What string `protobuf:"bytes,4,opt,name=what" json:"what,omitempty" bson:"action" valid:"required~What is required" conform:"trim"`
	// @inject_tag: bson:"goal" valid:"required~Goal is required" conform:"trim"
	Goal string `protobuf:"bytes,5,opt,name=goal" json:"goal,omitempty" bson:"goal" valid:"required~Goal is required" conform:"trim"`
	// @inject_tag: bson:"order"
	Order uint64 `protobuf:"varint,6,opt,name=order" json:"order,omitempty" bson:"order"`
	// @inject_tag: bson:"hidden"
	Hidden bool `protobuf:"varint,7,opt,name=hidden" json:"hidden,omitempty" bson:"hidden"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
}

func (m *Story) Reset()                    { *m = Story{} }
func (m *Story) String() string            { return proto.CompactTextString(m) }
func (*Story) ProtoMessage()               {}
func (*Story) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Story) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Story) GetPirority() Pirority {
	if m != nil {
		return m.Pirority
	}
	return Pirority_UNSET
}

func (m *Story) GetWho() string {
	if m != nil {
		return m.Who
	}
	return ""
}

func (m *Story) GetWhat() string {
	if m != nil {
		return m.What
	}
	return ""
}

func (m *Story) GetGoal() string {
	if m != nil {
		return m.Goal
	}
	return ""
}

func (m *Story) GetOrder() uint64 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Story) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Story) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Story) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Rating struct {
	// @inject_tag: bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"`
	// @inject_tag: bson:"user_id" valid:"required~User ID is required, uuidv4~User ID must be a valid UUIDv4" conform:"trim"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty" bson:"user_id" valid:"required~User ID is required, uuidv4~User ID must be a valid UUIDv4" conform:"trim"`
	// @inject_tag: bson:"idea_id" valid:"required~Idea ID is required, uuidv4~Idea id must be a valid UUIDv4" conform:"trim"
	IdeaId string `protobuf:"bytes,3,opt,name=idea_id,json=ideaId" json:"idea_id,omitempty" bson:"idea_id" valid:"required~Idea ID is required, uuidv4~Idea id must be a valid UUIDv4" conform:"trim"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
}

func (m *Rating) Reset()                    { *m = Rating{} }
func (m *Rating) String() string            { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()               {}
func (*Rating) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Rating) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Rating) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Rating) GetIdeaId() string {
	if m != nil {
		return m.IdeaId
	}
	return ""
}

func (m *Rating) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Rating) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type IdeaFilter struct {
	Ids         []string                         `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	Names       []string                         `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
	Hidden      bool                             `protobuf:"varint,3,opt,name=hidden" json:"hidden,omitempty"`
	AppTypes    []AppType                        `protobuf:"varint,4,rep,packed,name=app_types,json=appTypes,enum=go.micro.srv.ideas.AppType" json:"app_types,omitempty"`
	MinAge      uint64                           `protobuf:"varint,5,opt,name=min_age,json=minAge" json:"min_age,omitempty"`
	MaxAge      uint64                           `protobuf:"varint,6,opt,name=max_age,json=maxAge" json:"max_age,omitempty"`
	MinRating   float32                          `protobuf:"fixed32,7,opt,name=min_rating,json=minRating" json:"min_rating,omitempty"`
	MaxRating   float32                          `protobuf:"fixed32,8,opt,name=max_rating,json=maxRating" json:"max_rating,omitempty"`
	Occupations []*go_micro_srv_ideas.Occupation `protobuf:"bytes,9,rep,name=occupations" json:"occupations,omitempty"`
	CurrentPage uint64                           `protobuf:"varint,10,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	PerPage     uint64                           `protobuf:"varint,11,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
	Query       string                           `protobuf:"bytes,12,opt,name=query" json:"query,omitempty"`
	Sorts       []string                         `protobuf:"bytes,13,rep,name=sorts" json:"sorts,omitempty"`
}

func (m *IdeaFilter) Reset()                    { *m = IdeaFilter{} }
func (m *IdeaFilter) String() string            { return proto.CompactTextString(m) }
func (*IdeaFilter) ProtoMessage()               {}
func (*IdeaFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IdeaFilter) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *IdeaFilter) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *IdeaFilter) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *IdeaFilter) GetAppTypes() []AppType {
	if m != nil {
		return m.AppTypes
	}
	return nil
}

func (m *IdeaFilter) GetMinAge() uint64 {
	if m != nil {
		return m.MinAge
	}
	return 0
}

func (m *IdeaFilter) GetMaxAge() uint64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *IdeaFilter) GetMinRating() float32 {
	if m != nil {
		return m.MinRating
	}
	return 0
}

func (m *IdeaFilter) GetMaxRating() float32 {
	if m != nil {
		return m.MaxRating
	}
	return 0
}

func (m *IdeaFilter) GetOccupations() []*go_micro_srv_ideas.Occupation {
	if m != nil {
		return m.Occupations
	}
	return nil
}

func (m *IdeaFilter) GetCurrentPage() uint64 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *IdeaFilter) GetPerPage() uint64 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *IdeaFilter) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *IdeaFilter) GetSorts() []string {
	if m != nil {
		return m.Sorts
	}
	return nil
}

type ListIdeasResponse struct {
	Ideas []*Idea `protobuf:"bytes,1,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *ListIdeasResponse) Reset()                    { *m = ListIdeasResponse{} }
func (m *ListIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*ListIdeasResponse) ProtoMessage()               {}
func (*ListIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListIdeasResponse) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type ShowIdeasRequest struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *ShowIdeasRequest) Reset()                    { *m = ShowIdeasRequest{} }
func (m *ShowIdeasRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowIdeasRequest) ProtoMessage()               {}
func (*ShowIdeasRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ShowIdeasRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ShowIdeasResponse struct {
	Matched  int64   `protobuf:"varint,1,opt,name=matched" json:"matched,omitempty"`
	Modified int64   `protobuf:"varint,2,opt,name=modified" json:"modified,omitempty"`
	Ideas    []*Idea `protobuf:"bytes,3,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *ShowIdeasResponse) Reset()                    { *m = ShowIdeasResponse{} }
func (m *ShowIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*ShowIdeasResponse) ProtoMessage()               {}
func (*ShowIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ShowIdeasResponse) GetMatched() int64 {
	if m != nil {
		return m.Matched
	}
	return 0
}

func (m *ShowIdeasResponse) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *ShowIdeasResponse) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type UpsertIdeasRequest struct {
	Ideas []*Idea `protobuf:"bytes,1,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *UpsertIdeasRequest) Reset()                    { *m = UpsertIdeasRequest{} }
func (m *UpsertIdeasRequest) String() string            { return proto.CompactTextString(m) }
func (*UpsertIdeasRequest) ProtoMessage()               {}
func (*UpsertIdeasRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpsertIdeasRequest) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type CreateIdeasResponse struct {
	Matched  int64   `protobuf:"varint,1,opt,name=matched" json:"matched,omitempty"`
	Modified int64   `protobuf:"varint,2,opt,name=modified" json:"modified,omitempty"`
	Ideas    []*Idea `protobuf:"bytes,3,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *CreateIdeasResponse) Reset()                    { *m = CreateIdeasResponse{} }
func (m *CreateIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateIdeasResponse) ProtoMessage()               {}
func (*CreateIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateIdeasResponse) GetMatched() int64 {
	if m != nil {
		return m.Matched
	}
	return 0
}

func (m *CreateIdeasResponse) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *CreateIdeasResponse) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type UpdateIdeasResponse struct {
	Matched  int64   `protobuf:"varint,1,opt,name=matched" json:"matched,omitempty"`
	Modified int64   `protobuf:"varint,2,opt,name=modified" json:"modified,omitempty"`
	Ideas    []*Idea `protobuf:"bytes,3,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *UpdateIdeasResponse) Reset()                    { *m = UpdateIdeasResponse{} }
func (m *UpdateIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateIdeasResponse) ProtoMessage()               {}
func (*UpdateIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateIdeasResponse) GetMatched() int64 {
	if m != nil {
		return m.Matched
	}
	return 0
}

func (m *UpdateIdeasResponse) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *UpdateIdeasResponse) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type HideIdeasResponse struct {
	Matched  int64   `protobuf:"varint,1,opt,name=matched" json:"matched,omitempty"`
	Modified int64   `protobuf:"varint,2,opt,name=modified" json:"modified,omitempty"`
	Ideas    []*Idea `protobuf:"bytes,3,rep,name=ideas" json:"ideas,omitempty"`
}

func (m *HideIdeasResponse) Reset()                    { *m = HideIdeasResponse{} }
func (m *HideIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*HideIdeasResponse) ProtoMessage()               {}
func (*HideIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *HideIdeasResponse) GetMatched() int64 {
	if m != nil {
		return m.Matched
	}
	return 0
}

func (m *HideIdeasResponse) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *HideIdeasResponse) GetIdeas() []*Idea {
	if m != nil {
		return m.Ideas
	}
	return nil
}

type DeleteIdeasResponse struct {
	Deleted int64 `protobuf:"varint,1,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *DeleteIdeasResponse) Reset()                    { *m = DeleteIdeasResponse{} }
func (m *DeleteIdeasResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteIdeasResponse) ProtoMessage()               {}
func (*DeleteIdeasResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteIdeasResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func init() {
	proto.RegisterType((*Idea)(nil), "go.micro.srv.ideas.Idea")
	proto.RegisterType((*Story)(nil), "go.micro.srv.ideas.Story")
	proto.RegisterType((*Rating)(nil), "go.micro.srv.ideas.Rating")
	proto.RegisterType((*IdeaFilter)(nil), "go.micro.srv.ideas.IdeaFilter")
	proto.RegisterType((*ListIdeasResponse)(nil), "go.micro.srv.ideas.ListIdeasResponse")
	proto.RegisterType((*ShowIdeasRequest)(nil), "go.micro.srv.ideas.ShowIdeasRequest")
	proto.RegisterType((*ShowIdeasResponse)(nil), "go.micro.srv.ideas.ShowIdeasResponse")
	proto.RegisterType((*UpsertIdeasRequest)(nil), "go.micro.srv.ideas.UpsertIdeasRequest")
	proto.RegisterType((*CreateIdeasResponse)(nil), "go.micro.srv.ideas.CreateIdeasResponse")
	proto.RegisterType((*UpdateIdeasResponse)(nil), "go.micro.srv.ideas.UpdateIdeasResponse")
	proto.RegisterType((*HideIdeasResponse)(nil), "go.micro.srv.ideas.HideIdeasResponse")
	proto.RegisterType((*DeleteIdeasResponse)(nil), "go.micro.srv.ideas.DeleteIdeasResponse")
	proto.RegisterEnum("go.micro.srv.ideas.AppType", AppType_name, AppType_value)
	proto.RegisterEnum("go.micro.srv.ideas.Pirority", Pirority_name, Pirority_value)
}

func init() { proto.RegisterFile("proto/idea/idea.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1015 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x5b, 0x6f, 0x1a, 0x47,
	0x14, 0x06, 0x16, 0x16, 0xf6, 0x6c, 0xec, 0xe2, 0x71, 0xda, 0x6c, 0x68, 0x9b, 0x52, 0xd4, 0x8b,
	0x15, 0x29, 0x20, 0x11, 0xa9, 0x4a, 0xdf, 0x8a, 0x0d, 0xad, 0x51, 0x9d, 0x60, 0x2d, 0xb8, 0xad,
	0xfa, 0x42, 0xc7, 0xec, 0x04, 0xa6, 0x62, 0x2f, 0x99, 0x99, 0x8d, 0x8d, 0xf2, 0x6f, 0xfa, 0xde,
	0xc7, 0xbe, 0xf7, 0x87, 0xf5, 0xa1, 0x9a, 0x0b, 0x64, 0x1d, 0x36, 0x72, 0xed, 0x3e, 0xf8, 0x05,
	0xcd, 0x39, 0xdf, 0x39, 0x33, 0xe7, 0xf2, 0x7d, 0x0b, 0x7c, 0x98, 0xb0, 0x58, 0xc4, 0x1d, 0x1a,
	0x10, 0xac, 0x7e, 0xda, 0xca, 0x46, 0x68, 0x1e, 0xb7, 0x43, 0x3a, 0x63, 0x71, 0x9b, 0xb3, 0xd7,
	0x6d, 0x09, 0xf0, 0xc6, 0x67, 0xf3, 0x38, 0x9e, 0x2f, 0x49, 0x47, 0x45, 0x9c, 0xa7, 0x2f, 0x3b,
	0x82, 0x86, 0x84, 0x0b, 0x1c, 0x26, 0x3a, 0xa9, 0xd1, 0x9b, 0x53, 0xb1, 0x48, 0xcf, 0xdb, 0xb3,
	0x38, 0xec, 0xfc, 0x4e, 0x71, 0xb4, 0xc0, 0x51, 0x27, 0xe4, 0x4f, 0x78, 0x4a, 0x9f, 0xa8, 0x1b,
	0x74, 0x66, 0x27, 0x9e, 0xcd, 0xd2, 0x04, 0x0b, 0x1a, 0x47, 0x99, 0xa3, 0xbe, 0xa2, 0xf5, 0x8f,
	0x05, 0xe5, 0x61, 0x40, 0x30, 0xda, 0x85, 0xd2, 0xb0, 0xef, 0x15, 0x9b, 0xc5, 0x03, 0xc7, 0x2f,
	0x0d, 0xfb, 0x08, 0x41, 0x39, 0xc2, 0x21, 0xf1, 0x4a, 0xca, 0xa3, 0xce, 0xd2, 0xc7, 0x97, 0xe9,
	0xdc, 0xb3, 0xb4, 0x4f, 0x9e, 0x51, 0x13, 0xdc, 0x80, 0xf0, 0x19, 0xa3, 0x89, 0xbc, 0xd5, 0x2b,
	0x2b, 0x28, 0xeb, 0x42, 0x1f, 0x81, 0xbd, 0xa0, 0x41, 0x40, 0x22, 0xaf, 0xd2, 0x2c, 0x1e, 0xd4,
	0x7c, 0x63, 0xa1, 0x0e, 0x94, 0xc5, 0x2a, 0x21, 0x9e, 0xdd, 0xb4, 0x0e, 0x76, 0xbb, 0x1f, 0xb7,
	0xb7, 0x27, 0xd0, 0xee, 0x25, 0xc9, 0x64, 0x95, 0x10, 0x5f, 0x05, 0xa2, 0x07, 0x50, 0x0d, 0x69,
	0x34, 0xc5, 0x73, 0xe2, 0x55, 0x9b, 0xc5, 0x83, 0xb2, 0x6f, 0x87, 0x34, 0xea, 0xcd, 0x35, 0x80,
	0x2f, 0x15, 0x50, 0x33, 0x00, 0xbe, 0x94, 0x40, 0x17, 0x6c, 0x86, 0x05, 0x8d, 0xe6, 0x9e, 0xd3,
	0xb4, 0x0e, 0xdc, 0x6e, 0x23, 0xef, 0x11, 0x5f, 0x45, 0xf8, 0x26, 0x12, 0x3d, 0x85, 0x2a, 0x17,
	0x31, 0xa3, 0x84, 0x7b, 0xa0, 0x92, 0x1e, 0xe6, 0x25, 0x8d, 0x45, 0xcc, 0x56, 0xfe, 0x3a, 0x12,
	0x7d, 0x07, 0xee, 0xdb, 0xd1, 0x72, 0xcf, 0x55, 0x89, 0x8f, 0xf2, 0x12, 0x47, 0x9b, 0x30, 0x3f,
	0x9b, 0x82, 0xbe, 0x05, 0x98, 0x31, 0x82, 0x05, 0x09, 0xa6, 0x58, 0x78, 0xf7, 0x9a, 0x45, 0x53,
	0xae, 0x64, 0x40, 0x7b, 0xcd, 0x80, 0xf6, 0x64, 0xcd, 0x00, 0xdf, 0x31, 0xd1, 0x3d, 0x21, 0x53,
	0xd3, 0x24, 0x58, 0xa7, 0xee, 0x5c, 0x9f, 0x6a, 0xa2, 0x7b, 0xa2, 0xf5, 0x57, 0x09, 0x2a, 0xaa,
	0x15, 0x74, 0x1f, 0x2a, 0x82, 0x8a, 0x25, 0x31, 0x14, 0xd0, 0x06, 0x7a, 0x06, 0xb5, 0x84, 0xb2,
	0x98, 0x51, 0xb1, 0x52, 0x4c, 0xd8, 0xed, 0x7e, 0x92, 0xd7, 0xd4, 0xa9, 0x89, 0xf1, 0x37, 0xd1,
	0xa8, 0x0e, 0xd6, 0xc5, 0x22, 0x36, 0x54, 0x91, 0x47, 0xc9, 0x9e, 0x8b, 0x05, 0x16, 0x86, 0x22,
	0xea, 0x2c, 0x7d, 0xf3, 0x18, 0x2f, 0x15, 0x33, 0x1c, 0x5f, 0x9d, 0x65, 0x25, 0x31, 0x0b, 0x08,
	0xf3, 0x6c, 0xb5, 0x4b, 0x6d, 0x64, 0x58, 0x54, 0xbd, 0xc2, 0xa2, 0xab, 0x73, 0xab, 0xdd, 0x7e,
	0x6e, 0xce, 0x4d, 0xe6, 0xf6, 0x77, 0x11, 0x6c, 0xcd, 0x9b, 0x2d, 0xe1, 0x3c, 0x80, 0x6a, 0xca,
	0x09, 0x9b, 0xd2, 0xc0, 0x68, 0xc7, 0x96, 0xe6, 0x30, 0x90, 0x80, 0x9c, 0x96, 0x04, 0xf4, 0x54,
	0x6c, 0x69, 0x0e, 0x83, 0x77, 0x5a, 0x28, 0xdf, 0xbe, 0x85, 0xca, 0x4d, 0x5a, 0xf8, 0xc3, 0x02,
	0x90, 0xca, 0xff, 0x9e, 0x2e, 0x05, 0x61, 0x72, 0x5f, 0x34, 0xe0, 0x5e, 0xb1, 0x69, 0xc9, 0x7d,
	0xd1, 0x80, 0xcb, 0x3d, 0x48, 0xd5, 0x73, 0xaf, 0xa4, 0x7c, 0xda, 0xc8, 0xec, 0xc1, 0xba, 0xb2,
	0x87, 0x67, 0xe0, 0xe0, 0x24, 0x99, 0x4a, 0xa1, 0x72, 0xaf, 0x7c, 0xbd, 0xa4, 0x6b, 0x58, 0x1f,
	0x78, 0x56, 0xd6, 0x95, 0xf7, 0xc9, 0xda, 0xbe, 0x22, 0xeb, 0x4f, 0x01, 0x64, 0x86, 0x91, 0xb6,
	0xe4, 0x43, 0xc9, 0x77, 0x42, 0x1a, 0x99, 0x8d, 0x48, 0x18, 0x5f, 0xae, 0xe1, 0x9a, 0x81, 0xf1,
	0xa5, 0x81, 0xdf, 0xd1, 0xaa, 0x73, 0x73, 0xad, 0x7e, 0x0e, 0xf7, 0x66, 0x29, 0x63, 0x24, 0x12,
	0xd3, 0x44, 0x56, 0x07, 0xaa, 0x3a, 0xd7, 0xf8, 0x4e, 0xf1, 0x9c, 0xa0, 0x87, 0x50, 0x4b, 0x08,
	0xd3, 0xb0, 0xab, 0xe0, 0x6a, 0x42, 0x98, 0x82, 0xee, 0x43, 0xe5, 0x55, 0x4a, 0xd8, 0x4a, 0x89,
	0xdc, 0xf1, 0xb5, 0x21, 0xbd, 0x3c, 0x66, 0x82, 0x7b, 0x3b, 0x7a, 0xda, 0xca, 0x68, 0x1d, 0xc1,
	0xde, 0x09, 0xe5, 0x42, 0xee, 0x89, 0xfb, 0x84, 0x27, 0x71, 0xc4, 0x09, 0x6a, 0x43, 0x45, 0xd5,
	0xa7, 0x96, 0xe5, 0x76, 0xbd, 0xbc, 0xd2, 0x65, 0x86, 0xaf, 0xc3, 0x5a, 0x5f, 0x40, 0x7d, 0xbc,
	0x88, 0x2f, 0xcc, 0x25, 0xaf, 0x52, 0xc2, 0xc5, 0xf6, 0xba, 0x5b, 0x2b, 0xd8, 0xcb, 0x44, 0x99,
	0xa7, 0x3c, 0xb9, 0x02, 0x31, 0x5b, 0x90, 0x40, 0x31, 0xdc, 0xf2, 0xd7, 0x26, 0x6a, 0x40, 0x2d,
	0x8c, 0x03, 0xfa, 0x92, 0x12, 0xcd, 0x73, 0xcb, 0xdf, 0xd8, 0x6f, 0x0b, 0xb4, 0xfe, 0x5b, 0x81,
	0x7d, 0x40, 0x67, 0x09, 0x27, 0x4c, 0x5c, 0x29, 0xf1, 0xa6, 0x6d, 0xbe, 0x81, 0xfd, 0x23, 0x25,
	0x8c, 0xbb, 0x68, 0xe1, 0x0d, 0xec, 0x9f, 0x29, 0x69, 0xdd, 0xc5, 0xe3, 0x2b, 0xd8, 0x3b, 0xa6,
	0xc1, 0x9d, 0x3c, 0xdd, 0x81, 0xfd, 0x3e, 0x59, 0x92, 0x9c, 0xbe, 0x03, 0xe5, 0xde, 0x3c, 0x6e,
	0xcc, 0xc7, 0xdf, 0x40, 0xd5, 0x7c, 0x02, 0x50, 0x15, 0xac, 0x9f, 0x07, 0x87, 0xf5, 0x02, 0x02,
	0xb0, 0x9f, 0x8f, 0x0e, 0x87, 0x27, 0x83, 0x7a, 0x11, 0xb9, 0x50, 0xed, 0x0f, 0xc6, 0x3f, 0x4e,
	0x46, 0xa7, 0xf5, 0x12, 0x72, 0xa0, 0x32, 0x9a, 0x1c, 0x0f, 0xfc, 0xba, 0xf5, 0xf8, 0x07, 0xa8,
	0xad, 0xff, 0x65, 0xa4, 0xfb, 0xec, 0xc5, 0x78, 0x30, 0xa9, 0x17, 0x50, 0x1d, 0xee, 0xbd, 0x18,
	0x1e, 0x0d, 0xa6, 0x93, 0xd1, 0xf4, 0xb8, 0xf7, 0x93, 0xbc, 0xe0, 0x03, 0x70, 0xc7, 0xc7, 0xa3,
	0xb3, 0x93, 0xbe, 0x76, 0x94, 0xd0, 0x0e, 0x38, 0xcf, 0xcf, 0xc6, 0x13, 0x6d, 0x5a, 0xdd, 0x3f,
	0xcb, 0xe0, 0xca, 0x62, 0xc7, 0x84, 0xbd, 0xa6, 0x33, 0x82, 0x26, 0xe0, 0x6c, 0x24, 0x86, 0x1e,
	0xbd, 0xaf, 0x5f, 0xfd, 0x95, 0x6c, 0x7c, 0x99, 0x87, 0x6f, 0x29, 0xb4, 0x55, 0x40, 0xbf, 0x81,
	0x9b, 0x21, 0x23, 0xfa, 0x2a, 0x2f, 0x6f, 0x9b, 0xf3, 0x8d, 0xaf, 0xf3, 0xe2, 0x72, 0x58, 0xad,
	0x5f, 0xc8, 0x30, 0xee, 0xff, 0xbd, 0x90, 0x43, 0xdd, 0x56, 0x01, 0xfd, 0x02, 0x6e, 0x66, 0xb7,
	0xd7, 0xce, 0x26, 0xf7, 0xe6, 0x1c, 0x72, 0xb4, 0x0a, 0x72, 0xe6, 0x1b, 0xc2, 0xde, 0x6e, 0xe6,
	0x5b, 0x7c, 0xd7, 0xb7, 0x6e, 0xbe, 0x60, 0xb7, 0xbb, 0x75, 0xeb, 0x03, 0xd8, 0x2a, 0x1c, 0xda,
	0xbf, 0x96, 0x25, 0x78, 0x6e, 0xab, 0xbf, 0xd3, 0xa7, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x0f,
	0xc6, 0xea, 0x22, 0xc1, 0x0b, 0x00, 0x00,
}
