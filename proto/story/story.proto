syntax = "proto3";
package go.micro.srv.ideas;
option go_package="story";
import "google/protobuf/timestamp.proto";

// Pirority defines a set of pirorities
enum Pirority {
    UNSET=0;
    NICE_TO_HAVE = 1;
    SHOULD_HAVE = 2;
    MUST_HAVE = 3;
}

service Stories {
    rpc NewStories(stories) returns (stories) {}
    rpc UpdateStories(stories) returns (stories) {}
    rpc DeleteStories(DeleteStoriesRequest) returns (DeleteStoriesResponse) {}
}

message DeleteStoriesRequest {
    repeated string ids = 1;
}

message DeleteStoriesResponse {

}

message stories {
    repeated Story stories = 1;
}

message Story {
    // @inject_tag: bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"
    string ID = 1;
    // @inject_tag: bson:"title" valid:"required~Title is required" conform:"trim"
    string title = 2;
    // @inject_tag: bson:"pirority" valid:"required~Pirority is required"
    Pirority pirority = 3;
    // @inject_tag: bson:"role" valid:"required~Who is required" conform:"trim"
    string who = 4;
    // @inject_tag: bson:"action" valid:"required~What is required" conform:"trim"
    string what = 5;
    // @inject_tag: bson:"goal" valid:"required~Goal is required" conform:"trim"
    string goal = 6;
    // @inject_tag: bson:"order"
    uint64 order = 7;
    // @inject_tag: bson:"idea_id" valid:"required~Idea ID is required, uuidv4~Idea id must be a valid UUIDv4" conform:"trim"
    string idea_id = 8;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 9;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 10;
}

