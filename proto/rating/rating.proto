syntax = "proto3";
package go.micro.srv.ideas;
option go_package="rating";
import "google/protobuf/timestamp.proto";

service RatingService {
    rpc NewRatings(ratings) returns (ratings) {}
    rpc UpdateRatings(ratings) returns (ratings) {}
    rpc DeleteRatings(DeleteRatingsRequest) returns (DeleteRatingsResponse) {}
}

message DeleteRatingsRequest {
    repeated string ids = 1;
}

message DeleteRatingsResponse {

}

message ratings {
    repeated Rating ratings = 1;
}

message Rating {
    // @inject_tag: bson:"_id" valid:"required~ID is required, uuidv4~ID must be a valid UUIDv4" conform:"trim"
    string ID = 1;
    // @inject_tag: bson:"user_id" valid:"required~User ID is required, uuidv4~User ID must be a valid UUIDv4" conform:"trim"
    string user_id = 2;
    // @inject_tag: bson:"idea_id" valid:"required~Idea ID is required, uuidv4~Idea id must be a valid UUIDv4" conform:"trim"
    string idea_id = 3;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 4;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 5;
}
